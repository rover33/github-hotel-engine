{"ast":null,"code":"var _jsxFileName = \"/Users/remypearlstone/Desktop/webdev/hotel-engine-github/hotel-frontend/src/Search.js\";\nimport React, { useState, useEffect } from \"react\";\nimport useInfiniteScroll from 'react-infinite-scroll-hook';\n\nlet Search = () => {\n  const [searchString, setSearchString] = useState(\"\");\n  const [items, setItems] = useState([]);\n  const [hasNextPage, setHasNextPage] = useState();\n\n  function handleLoadMore() {\n    setLoading(true);\n    fetch(`http://localhost:4000/search/repositories?q=${searchString}&pages=${items}`).then(res => res.json()).then(res => {\n      console.log(res);\n      setLoading(false);\n    }).catch(() => {\n      console.log(\"stop it\");\n      setLoading(false);\n    });\n    loadNextPage(endCursor, pageSize).then(newPage => {\n      setLoading(false);\n      setHasNextPage(newPage.hasNextPage);\n      setItems([...items, newPage.items]);\n    });\n  }\n\n  const infiniteRef = useInfiniteScroll({\n    loading,\n    hasNextPage,\n    onLoadMore: handleLoadMore,\n    scrollContainer\n  });\n\n  let onChange = e => setSearchString(e.target.value);\n\n  let renderSearch = res => {\n    console.log(\"calling render github\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Github Search\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"gitSearchDiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"search\",\n    className: \"gitSearch\",\n    placeholder: \"search repo\",\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(List, {\n    ref: infiniteRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 8\n    }\n  }, items.map(item => /*#__PURE__*/React.createElement(ListItem, {\n    key: item.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, item.value)), loading && /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }\n  }, \"Loading...\")));\n};\n\nexport default Search;","map":{"version":3,"sources":["/Users/remypearlstone/Desktop/webdev/hotel-engine-github/hotel-frontend/src/Search.js"],"names":["React","useState","useEffect","useInfiniteScroll","Search","searchString","setSearchString","items","setItems","hasNextPage","setHasNextPage","handleLoadMore","setLoading","fetch","then","res","json","console","log","catch","loadNextPage","endCursor","pageSize","newPage","infiniteRef","loading","onLoadMore","scrollContainer","onChange","e","target","value","renderSearch","map","item","key"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,iBAAP,MAA8B,4BAA9B;;AAEA,IAAIC,MAAM,GAAG,MAAM;AACjB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,EAA9C;;AAGA,WAASU,cAAT,GAA0B;AACxBC,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAC,IAAAA,KAAK,CACF,+CAA8CR,YAAa,UAASE,KAAM,EADxE,CAAL,CAGCO,IAHD,CAGMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAHb,EAICF,IAJD,CAIMC,GAAG,IAAI;AACVE,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAH,MAAAA,UAAU,CAAC,KAAD,CAAV;AACF,KAPD,EAQCO,KARD,CAQO,MAAM;AACXF,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAXD;AAaAQ,IAAAA,YAAY,CAACC,SAAD,EAAYC,QAAZ,CAAZ,CAAkCR,IAAlC,CAAwCS,OAAD,IAAa;AAClDX,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,MAAAA,cAAc,CAACa,OAAO,CAACd,WAAT,CAAd;AACAD,MAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWgB,OAAO,CAAChB,KAAnB,CAAD,CAAR;AACD,KAJD;AAKD;;AAED,QAAMiB,WAAW,GAAGrB,iBAAiB,CAAC;AACpCsB,IAAAA,OADoC;AAEpChB,IAAAA,WAFoC;AAGpCiB,IAAAA,UAAU,EAAEf,cAHwB;AAIpCgB,IAAAA;AAJoC,GAAD,CAArC;;AAQA,MAAIC,QAAQ,GAAGC,CAAC,IAAIvB,eAAe,CAACuB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAnC;;AAEA,MAAIC,YAAY,GAAIjB,GAAD,IAAS;AAC1BE,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AAED,GAHD;;AAMA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,WAFZ;AAGE,IAAA,WAAW,EAAC,aAHd;AAIE,IAAA,QAAQ,EAAEW,CAAC,IAAID,QAAQ,CAACC,CAAD,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,eAUG,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEL,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIjB,KAAK,CAAC0B,GAAN,CAAWC,IAAD,iBACT,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BD,IAAI,CAACH,KAA/B,CADD,CADJ,EAIAN,OAAO,iBAAI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJX,CAVH,CADF;AAmBD,CA/DD;;AAiEA,eAAerB,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport useInfiniteScroll from 'react-infinite-scroll-hook';\n\nlet Search = () => {\n  const [searchString, setSearchString] = useState(\"\");\n  const [items, setItems] = useState([]);\n  const [hasNextPage, setHasNextPage] = useState();\n\n\n  function handleLoadMore() {\n    setLoading(true);\n    fetch(\n      `http://localhost:4000/search/repositories?q=${searchString}&pages=${items}`,\n    )\n    .then(res => res.json())\n    .then(res => {\n       console.log(res)\n       setLoading(false);\n    })\n    .catch(() => {\n      console.log(\"stop it\");\n      setLoading(false);\n    });\n\n    loadNextPage(endCursor, pageSize).then((newPage) => {\n      setLoading(false);\n      setHasNextPage(newPage.hasNextPage);\n      setItems([...items, newPage.items]);\n    });\n  }\n\n  const infiniteRef = useInfiniteScroll({\n    loading,\n    hasNextPage,\n    onLoadMore: handleLoadMore,\n    scrollContainer,\n  });\n\n  \n  let onChange = e => setSearchString(e.target.value);\n\n  let renderSearch = (res) => {\n    console.log(\"calling render github\");\n\n  };\n\n\n  return (\n    <div>\n      <h1 className=\"header\">Github Search</h1>\n      <div className=\"gitSearchDiv\">\n        <input\n          type=\"search\"\n          className=\"gitSearch\"\n          placeholder=\"search repo\"\n          onChange={e => onChange(e)}\n        />\n      </div>\n       <List ref={infiniteRef}>\n          {items.map((item) => (\n            <ListItem key={item.key}>{item.value}</ListItem>\n          ))}\n      {loading && <ListItem>Loading...</ListItem>}\n    </List>\n    </div>\n  );\n};\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}