{"ast":null,"code":"var _jsxFileName = \"/Users/remypearlstone/Desktop/webdev/hotel-engine-github/hotel-frontend/src/Search.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory, Route } from \"react-router-dom\";\n\nconst Search = () => {\n  const [query, setQuery] = useState(\"\");\n  const [starSort, setStarSort] = useState({\n    stars: false\n  });\n  const [score, setScore] = useState(\"\");\n  const [items, setItems] = useState([]);\n  const [languages, setLanguages] = useState({\n    JavaScript: false,\n    Python: false,\n    Ruby: false,\n    Java: false,\n    Swift: false\n  });\n  useEffect(() => {\n    // console.log(\"hello\")\n    if (!query) return;\n\n    const fetchData = async () => {\n      const response = await fetch(`http://localhost:5000/search/repositories?searchTerms=${query}` // `http://localhost:5000/search/repositories?searchTerms=${query}+searchLang:${languages}&searchStars=${starSort}&searchScore=${score}`\n      );\n      const items = await response.json();\n      setItems(items.items);\n    };\n\n    fetchData();\n  }, [query, languages, starSort, score]);\n\n  const handleChange = e => {\n    setItems([]);\n    setQuery(e.target.value);\n  };\n\n  const checkBoxLanguageClick = e => {\n    let tempLanguage = { ...languages\n    };\n    if (tempLanguage[e.target.name] !== languages[e.target.name]) ;\n    setLanguages(tempLanguage);\n  };\n\n  const checkBoxStarClick = e => {\n    let tempStars = { ...starSort\n    };\n    if (tempStars[e.target.name] !== starSort[e.target.name]) return;\n    setStarSort(tempStars);\n  };\n\n  const checkIfType = (arr1, arr2) => {\n    return arr1.some(item => arr2.includes(item));\n  };\n\n  const RouteChange = () => {\n    let path = '/Details';\n    let history = useHistory();\n    console.log(\"click\");\n    history.push(path);\n  };\n\n  const renderItems = () => {\n    let {\n      Python,\n      JavaScript,\n      Ruby,\n      Java,\n      Swift\n    } = languages;\n    let {\n      stars\n    } = starSort;\n    let tempArr = new Set();\n    let langArr = [];\n    let starArr = [];\n    if (Python) langArr.push(\"Python\");\n    if (JavaScript) langArr.push(\"JavaScript\");\n    if (Java) langArr.push(\"Java\");\n    if (Ruby) langArr.push(\"Ruby\");\n    if (Swift) langArr.push(\"Swift\");\n    if (stars) starArr.push(\"stars\");\n\n    if (langArr.length <= 0 && starArr.length <= 0 && query.length <= 0) {\n      tempArr = items;\n    } else {\n      for (let i = 0; i < items.length; i++) {\n        if (query.length > 0 && items[i].name.toLowerCase().includes(query)) {\n          tempArr.add(items[i]);\n        }\n\n        if (langArr.length > 0 && checkIfType(langArr, items[i].language)) {\n          tempArr.add(items[i]);\n        }\n\n        if (starArr.length > 0 && checkIfType(starArr, items[i].stargazers_count)) {\n          tempArr.add(items[i]);\n        }\n      }\n    }\n\n    tempArr = Array.from(tempArr);\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, tempArr.map(el => /*#__PURE__*/React.createElement(\"div\", {\n      key: el.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, \"Name: \", el.name, \", Stars: \", el.stargazers_count, \", Language: \", el.language), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: RouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, \"View Details\"))));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, \"Github Search\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"Form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    autoFocus: true,\n    className: \"gitSearch\",\n    placeholder: \"search repo\",\n    onChange: handleChange,\n    value: query,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkBoxes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, \"Sort By:\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, \"Stars:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"stars\",\n    name: \"stars\",\n    onClick: e => checkBoxStarClick(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, \"Score:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"score\",\n    name: \"score\" // onClick={e => checkBoxTypeClick(e)}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"langCheckBoxes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, \"Languages:\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, \"Python\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"Python\",\n    name: \"Python\",\n    onClick: e => checkBoxLanguageClick(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, \"JavaScript\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"JavaScript\",\n    name: \"JavaScript\" // onClick={e => checkBoxLanguageClick(e)}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, \"Ruby\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"Ruby\",\n    name: \"Ruby\" // onClick={e => checkBoxLanguageClick(e)}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, \"Swift\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"Swift\",\n    name: \"Swift\" // onClick={e => checkBoxLanguageClick(e)}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, \"Java\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"Java\",\n    name: \"Java\" // onClick={e => checkBoxLanguageClick(e)}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }, renderItems()));\n};\n\nexport default Search;","map":{"version":3,"sources":["/Users/remypearlstone/Desktop/webdev/hotel-engine-github/hotel-frontend/src/Search.js"],"names":["React","useState","useEffect","useHistory","Route","Search","query","setQuery","starSort","setStarSort","stars","score","setScore","items","setItems","languages","setLanguages","JavaScript","Python","Ruby","Java","Swift","fetchData","response","fetch","json","handleChange","e","target","value","checkBoxLanguageClick","tempLanguage","name","checkBoxStarClick","tempStars","checkIfType","arr1","arr2","some","item","includes","RouteChange","path","history","console","log","push","renderItems","tempArr","Set","langArr","starArr","length","i","toLowerCase","add","language","stargazers_count","Array","from","map","el","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory, Route } from \"react-router-dom\";\n\n\nconst Search = () => {\n  const [query, setQuery] = useState(\"\");\n  const [starSort, setStarSort ] = useState({\n    stars: false\n  });\n  const [score, setScore ] = useState(\"\");\n  const [items, setItems] = useState([]);\n  const [languages, setLanguages] = useState({\n    JavaScript: false,\n    Python: false, \n    Ruby: false,\n    Java: false,\n    Swift: false\n  });\n\n  useEffect(() => {\n    // console.log(\"hello\")\n    if (!query) return;\n\n    const fetchData = async () => {\n      const response = await fetch(\n        `http://localhost:5000/search/repositories?searchTerms=${query}`\n        // `http://localhost:5000/search/repositories?searchTerms=${query}+searchLang:${languages}&searchStars=${starSort}&searchScore=${score}`\n      );\n      const items = await response.json();\n      setItems(items.items);\n    };\n    fetchData()\n  }, [query, languages, starSort, score])\n\n\n\n\n  const handleChange = (e) => {\n      setItems([]);\n      setQuery(e.target.value);\n    }\n  \n  const checkBoxLanguageClick = e => {\n    let tempLanguage = { ...languages };\n    if (tempLanguage[e.target.name] !== languages[e.target.name]);\n    setLanguages(tempLanguage);\n  };\n\n  const checkBoxStarClick = e => {\n    let tempStars = {...starSort };\n    if (tempStars[e.target.name] !== starSort[e.target.name]) return;\n    setStarSort(tempStars);\n  }\n\n  const checkIfType = (arr1, arr2) => {\n    return arr1.some(item => arr2.includes(item))\n  }\n\n  const RouteChange = () => {\n    let path = '/Details'\n    let history = useHistory();\n    console.log(\"click\")\n    history.push(path)\n  }\n\n\n  const renderItems = () => {\n    let { Python, JavaScript, Ruby, Java, Swift} = languages;\n    let { stars } = starSort;\n    let tempArr = new Set();\n    let langArr = [];\n    let starArr = [];\n    if (Python) langArr.push(\"Python\");\n    if (JavaScript) langArr.push(\"JavaScript\");\n    if (Java) langArr.push(\"Java\")\n    if (Ruby) langArr.push(\"Ruby\");\n    if (Swift) langArr.push(\"Swift\")\n    if ( stars ) starArr.push(\"stars\")\n    if(\n      langArr.length <= 0 && starArr.length <= 0 && query.length <= 0){\n      tempArr = items;\n    } else {\n      for (let i = 0; i < items.length; i++) {\n        if (\n          query.length > 0 && items[i].name.toLowerCase().includes(query)) {\n            tempArr.add(items[i]);\n          }\n        if (langArr.length > 0 && checkIfType(langArr, items[i].language)){\n          tempArr.add(items[i])\n        }\n        if (starArr.length > 0 && checkIfType(starArr, items[i].stargazers_count)){\n          tempArr.add(items[i])\n        }\n      }\n    }\n\n    tempArr = Array.from(tempArr)\n\n    return (\n      <ul>\n      {tempArr.map (el => (\n        <div key={el.id}>\n          <li>Name: {el.name}, Stars: {el.stargazers_count}, Language: {el.language}</li>\n          <button onClick={RouteChange}>View Details</button>\n        </div>\n      ))}\n      </ul>\n    )\n  }\n\n\n\n  return (\n      <div>\n        <h1 className=\"header\">Github Search</h1>\n        <form className=\"Form\">\n          <input\n              type=\"text\"\n              autoFocus\n              className=\"gitSearch\"\n              placeholder=\"search repo\"\n              onChange={handleChange}\n              value={query}\n            />\n        </form>\n        <div className=\"checkBoxes\">\n          <div>\n            Sort By:\n            <br/>\n            <label>Stars:</label>\n            <input\n              type=\"checkbox\"\n              id=\"stars\"\n              name=\"stars\"\n              onClick={e => checkBoxStarClick(e)}\n            >\n            </input>\n            <label>Score:</label>\n            <input\n              type=\"checkbox\"\n              id=\"score\"\n              name=\"score\"\n              // onClick={e => checkBoxTypeClick(e)}\n            >\n            </input>\n          </div>\n          <br/>\n          <br/>\n          <div className=\"langCheckBoxes\">\n            Languages: \n            <br />\n            <label>Python</label>\n            <input\n              type=\"checkbox\"\n              id=\"Python\"\n              name=\"Python\"\n              onClick={e => checkBoxLanguageClick(e)}\n            >\n            </input>\n            <label>JavaScript</label>\n            <input\n              type=\"checkbox\"\n              id=\"JavaScript\"\n              name=\"JavaScript\"\n              // onClick={e => checkBoxLanguageClick(e)}\n            >\n            </input>\n            <label>Ruby</label>\n            <input\n              type=\"checkbox\"\n              id=\"Ruby\"\n              name=\"Ruby\"\n              // onClick={e => checkBoxLanguageClick(e)}\n            >\n            </input>\n            <label>Swift</label>\n            <input\n              type=\"checkbox\"\n              id=\"Swift\"\n              name=\"Swift\"\n              // onClick={e => checkBoxLanguageClick(e)}\n            >\n            </input>\n            <label>Java</label>\n            <input\n              type=\"checkbox\"\n              id=\"Java\"\n              name=\"Java\"\n              // onClick={e => checkBoxLanguageClick(e)}\n            >\n            </input>\n          </div>\n\n        </div>\n        <ul>\n          {renderItems()}\n        </ul>\n      </div>\n    );\n  };\n\n\nexport default Search;\n\n"]},"metadata":{},"sourceType":"module"}