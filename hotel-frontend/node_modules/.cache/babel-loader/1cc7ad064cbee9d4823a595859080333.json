{"ast":null,"code":"var _jsxFileName = \"/Users/remypearlstone/Desktop/webdev/hotel-engine-github/hotel-frontend/src/Search.js\";\nimport React, { useState, useEffect } from \"react\";\n\nlet Search = () => {\n  let [github, setGithub] = useState([]);\n  let [searchString, setSearchString] = useState(\"\");\n  useEffect(() => {\n    fetch(`http://localhost:4000/search/repositories?q=${searchString}`).then(res => res.json()).then(res => {\n      console.log(res);\n    }).catch(() => {\n      console.log(\"stop it\");\n    });\n  }, [searchString]);\n\n  let onChange = e => setSearchString(e.target.value);\n\n  let renderSearch = res => {\n    console.log(\"calling render github\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Github Search\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"gitSearchDiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"search\",\n    className: \"gitSearch\",\n    placeholder: \"search repo\",\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"githubSearchList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, renderSearch()));\n};\n\nexport default Search;","map":{"version":3,"sources":["/Users/remypearlstone/Desktop/webdev/hotel-engine-github/hotel-frontend/src/Search.js"],"names":["React","useState","useEffect","Search","github","setGithub","searchString","setSearchString","fetch","then","res","json","console","log","catch","onChange","e","target","value","renderSearch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,IAAIC,MAAM,GAAG,MAAM;AACjB,MAAI,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,MAAI,CAACK,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAA9C;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,KAAK,CACF,+CAA8CF,YAAa,EADzD,CAAL,CAGGG,IAHH,CAGQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAHf,EAIGF,IAJH,CAIQC,GAAG,IAAI;AACVE,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACF,KANH,EAOGI,KAPH,CAOS,MAAM;AACXF,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,KATH;AAUD,GAXQ,EAWN,CAACP,YAAD,CAXM,CAAT;;AAcA,MAAIS,QAAQ,GAAGC,CAAC,IAAIT,eAAe,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAnC;;AAEA,MAAIC,YAAY,GAAIT,GAAD,IAAS;AAC1BE,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AAED,GAHD;;AAMA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,WAFZ;AAGE,IAAA,WAAW,EAAC,aAHd;AAIE,IAAA,QAAQ,EAAEG,CAAC,IAAID,QAAQ,CAACC,CAAD,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,eAUE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCG,YAAY,EAA/C,CAVF,CADF;AAcD,CAzCD;;AA2CA,eAAehB,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nlet Search = () => {\n  let [github, setGithub] = useState([]);\n  let [searchString, setSearchString] = useState(\"\");\n\n\n  useEffect(() => {\n    fetch(\n      `http://localhost:4000/search/repositories?q=${searchString}`,\n    )\n      .then(res => res.json())\n      .then(res => {\n         console.log(res)\n      })\n      .catch(() => {\n        console.log(\"stop it\");\n      });\n  }, [searchString]);\n\n  \n  let onChange = e => setSearchString(e.target.value);\n\n  let renderSearch = (res) => {\n    console.log(\"calling render github\");\n\n  };\n\n\n  return (\n    <div>\n      <h1 className=\"header\">Github Search</h1>\n      <div className=\"gitSearchDiv\">\n        <input\n          type=\"search\"\n          className=\"gitSearch\"\n          placeholder=\"search repo\"\n          onChange={e => onChange(e)}\n        />\n      </div>\n      <div className=\"githubSearchList\">{renderSearch()}</div>\n    </div>\n  );\n};\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}