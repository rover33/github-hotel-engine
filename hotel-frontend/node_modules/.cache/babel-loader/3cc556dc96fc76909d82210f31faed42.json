{"ast":null,"code":"var _jsxFileName = \"/Users/remypearlstone/Desktop/webdev/hotel-engine-github/hotel-frontend/src/Search.js\";\nimport React, { useState } from \"react\";\nimport useInfiniteScroll from 'react-infinite-scroll-hook';\n\nconst Search = ({\n  scrollContainer\n}) => {\n  const [searchString, setSearchString] = useState(\"\");\n  const [items, setItems] = useState([]);\n  const [hasNextPage, setHasNextPage] = useState(false);\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n\n  const handleLoadMore = () => {\n    setLoading(true);\n    fetch(`http://localhost:4000/search/repositories?q=${searchString}&pages=${page}`).then(res => res.json()).then(res => {\n      //  console.log(res)\n      setLoading(false);\n      let total = res.total_count;\n      let current = page * 30;\n      let hasNextPage = current <= total;\n      setHasNextPage(hasNextPage); //  setHasNextPage(false)\n      //  console.log(res.items[0].name)\n\n      setItems([...items, res.items]);\n      console.log(items);\n      setPage(page + 1);\n    }).catch(() => {\n      console.log(\"stop it\");\n      setLoading(false);\n    });\n  };\n\n  const infiniteRef = useInfiniteScroll({\n    loading,\n    hasNextPage,\n    onLoadMore: handleLoadMore,\n    scrollContainer\n  });\n\n  const renderItems = () => {\n    if (!items || items.length <= 0) return;\n    return items[0].map(item => {\n      console.log(item);\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 14\n        }\n      }, item.name);\n    });\n  };\n\n  let onChange = e => {\n    setItems([]);\n    setPage(0);\n    setHasNextPage(true);\n    setSearchString(e.target.value);\n\n    setTimeout = () => {\n      alert(\"stop \"), 2000;\n    };\n  };\n\n  let onClick = () => {\n    alert(\"clicked\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"Github Search\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"gitSearchDiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"search\",\n    className: \"gitSearch\",\n    placeholder: \"search repo\",\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"ul\", {\n    ref: infiniteRef,\n    style: {\n      maxHeight: \"10rem\"\n    },\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 8\n    }\n  }, renderItems()));\n};\n\nexport default Search;","map":{"version":3,"sources":["/Users/remypearlstone/Desktop/webdev/hotel-engine-github/hotel-frontend/src/Search.js"],"names":["React","useState","useInfiniteScroll","Search","scrollContainer","searchString","setSearchString","items","setItems","hasNextPage","setHasNextPage","page","setPage","loading","setLoading","handleLoadMore","fetch","then","res","json","total","total_count","current","console","log","catch","infiniteRef","onLoadMore","renderItems","length","map","item","id","name","onChange","e","target","value","setTimeout","alert","onClick","maxHeight"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport useInfiniteScroll from 'react-infinite-scroll-hook';\n\n\nconst Search = ({scrollContainer}) => {\n  const [searchString, setSearchString] = useState(\"\");\n  const [items, setItems] = useState([]);\n  const [hasNextPage, setHasNextPage] = useState(false);\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n\n\n  const handleLoadMore = () => {\n\n    setLoading(true);\n    fetch(\n      `http://localhost:4000/search/repositories?q=${searchString}&pages=${page}`,\n    )\n    .then(res => res.json())\n    .then(res => {\n      //  console.log(res)\n       setLoading(false);\n       let total = res.total_count\n       let current = page * 30\n       let hasNextPage = (current <= total)\n       setHasNextPage(hasNextPage);\n      //  setHasNextPage(false)\n      //  console.log(res.items[0].name)\n       setItems([...items, res.items]);\n       console.log(items)\n       setPage(page+1)\n    })\n    .catch(() => {\n      console.log(\"stop it\");\n      setLoading(false);\n    });\n  }\n\n  const infiniteRef = useInfiniteScroll({\n    loading,\n    hasNextPage,\n    onLoadMore: handleLoadMore,\n    scrollContainer,\n  });\n\n  const renderItems = () => {\n    if (!items || items.length <= 0 ) return\n    return items[0].map((item) => {\n      console.log(item)\n      return <li key={item.id}>{item.name}</li>\n  })\n}\n\n  let onChange = e => {\n    setItems([])\n    setPage(0)\n    setHasNextPage(true)\n    setSearchString(e.target.value)\n    setTimeout = () => {\n      alert(\"stop \"), 2000\n    }\n  }\n\n  let onClick = () => {\n    alert(\"clicked\")\n  }\n\n  return (\n    <div>\n      <h1 className=\"header\">Github Search</h1>\n      <div className=\"gitSearchDiv\">\n        <input\n          type=\"search\"\n          className=\"gitSearch\"\n          placeholder=\"search repo\"\n          onChange={e => onChange(e)}\n        />\n      </div>\n       <ul ref={infiniteRef} style={{maxHeight:\"10rem\"}} onClick={onClick}>\n        {renderItems()}\n        {/* {loading && <li>Loading...</li>} */}\n      </ul>\n    </div>\n  );\n};\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}