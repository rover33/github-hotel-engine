{"ast":null,"code":"var _jsxFileName = \"/Users/remypearlstone/Desktop/webdev/hotel-engine-github/hotel-frontend/src/Search.js\";\nimport React, { useState, useEffect } from \"react\";\nimport useInfiniteScroll from 'react-infinite-scroll-hook';\n\nlet Search = () => {\n  const [searchString, setSearchString] = useState(\"\");\n  const [items, setItems] = useState([]);\n  const [hasNextPage, setHasNextPage] = useState();\n  const [page, setPage] = useState();\n\n  handleLoadMore = () => {\n    setLoading(true);\n    fetch(`http://localhost:4000/search/repositories?q=${searchString}&pages=${page}`).then(res => res.json()).then(res => {\n      console.log(res);\n      setLoading(false);\n      let total = res.total_count;\n      let current = page * 30;\n      let hasNextPage = current <= total;\n      setHasNextPage(hasNextPage);\n      setItems([...items, res.items]);\n      setPage(page + 1);\n    }).catch(() => {\n      console.log(\"stop it\");\n      setLoading(false);\n    });\n  };\n\n  const infiniteRef = useInfiniteScroll({\n    loading,\n    hasNextPage,\n    onLoadMore: handleLoadMore,\n    scrollContainer\n  });\n\n  let onChange = e => setSearchString(e.target.value);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Github Search\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"gitSearchDiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"search\",\n    className: \"gitSearch\",\n    placeholder: \"search repo\",\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Search;","map":{"version":3,"sources":["/Users/remypearlstone/Desktop/webdev/hotel-engine-github/hotel-frontend/src/Search.js"],"names":["React","useState","useEffect","useInfiniteScroll","Search","searchString","setSearchString","items","setItems","hasNextPage","setHasNextPage","page","setPage","handleLoadMore","setLoading","fetch","then","res","json","console","log","total","total_count","current","catch","infiniteRef","loading","onLoadMore","scrollContainer","onChange","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,iBAAP,MAA8B,4BAA9B;;AAGA,IAAIC,MAAM,GAAG,MAAM;AACjB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,EAA9C;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,EAAhC;;AAEAY,EAAAA,cAAc,GAAG,MAAM;AACrBC,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAC,IAAAA,KAAK,CACF,+CAA8CV,YAAa,UAASM,IAAK,EADvE,CAAL,CAGCK,IAHD,CAGMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAHb,EAICF,IAJD,CAIMC,GAAG,IAAI;AACVE,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAH,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA,UAAIO,KAAK,GAAGJ,GAAG,CAACK,WAAhB;AACA,UAAIC,OAAO,GAAGZ,IAAI,GAAG,EAArB;AACA,UAAIF,WAAW,GAAIc,OAAO,IAAIF,KAA9B;AACAX,MAAAA,cAAc,CAACD,WAAD,CAAd;AACAD,MAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWU,GAAG,CAACV,KAAf,CAAD,CAAR;AACAK,MAAAA,OAAO,CAACD,IAAI,GAAC,CAAN,CAAP;AACF,KAbD,EAcCa,KAdD,CAcO,MAAM;AACXL,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAjBD;AAkBD,GApBD;;AAsBA,QAAMW,WAAW,GAAGtB,iBAAiB,CAAC;AACpCuB,IAAAA,OADoC;AAEpCjB,IAAAA,WAFoC;AAGpCkB,IAAAA,UAAU,EAAEd,cAHwB;AAIpCe,IAAAA;AAJoC,GAAD,CAArC;;AAQA,MAAIC,QAAQ,GAAGC,CAAC,IAAIxB,eAAe,CAACwB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAnC;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,WAFZ;AAGE,IAAA,WAAW,EAAC,aAHd;AAIE,IAAA,QAAQ,EAAEF,CAAC,IAAID,QAAQ,CAACC,CAAD,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF;AAmBD,CAzDD;;AA0DA,eAAe1B,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport useInfiniteScroll from 'react-infinite-scroll-hook';\n\n\nlet Search = () => {\n  const [searchString, setSearchString] = useState(\"\");\n  const [items, setItems] = useState([]);\n  const [hasNextPage, setHasNextPage] = useState();\n  const [page, setPage] = useState();\n\n  handleLoadMore = () => {\n    setLoading(true);\n    fetch(\n      `http://localhost:4000/search/repositories?q=${searchString}&pages=${page}`,\n    )\n    .then(res => res.json())\n    .then(res => {\n       console.log(res)\n       setLoading(false);\n       let total = res.total_count\n       let current = page * 30\n       let hasNextPage = (current <= total)\n       setHasNextPage(hasNextPage);\n       setItems([...items, res.items]);\n       setPage(page+1)\n    })\n    .catch(() => {\n      console.log(\"stop it\");\n      setLoading(false);\n    });\n  }\n\n  const infiniteRef = useInfiniteScroll({\n    loading,\n    hasNextPage,\n    onLoadMore: handleLoadMore,\n    scrollContainer,\n  });\n\n\n  let onChange = e => setSearchString(e.target.value);\n\n  return (\n    <div>\n      <h1 className=\"header\">Github Search</h1>\n      <div className=\"gitSearchDiv\">\n        <input\n          type=\"search\"\n          className=\"gitSearch\"\n          placeholder=\"search repo\"\n          onChange={e => onChange(e)}\n        />\n      </div>\n       {/* <List ref={infiniteRef}>\n          {items.map((item) => (\n            <ListItem key={item.id}>{item.full_name}</ListItem>\n          ))}\n      {loading && <ListItem>Loading...</ListItem>}\n    </List> */}\n    </div>\n  );\n};\nexport default Search;"]},"metadata":{},"sourceType":"module"}