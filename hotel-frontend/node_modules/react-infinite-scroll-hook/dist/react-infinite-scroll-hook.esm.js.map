{"version":3,"file":"react-infinite-scroll-hook.esm.js","sources":["../src/useWindowSize.ts","../src/useInterval.ts","../src/utils.ts","../src/useInfiniteScroll.ts"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\r\n\r\nfunction useWindowSize() {\r\n  const validWindow = typeof window === 'object';\r\n\r\n  const getSize = useCallback(() => {\r\n    const size = {\r\n      width: validWindow ? window.innerWidth : undefined,\r\n      height: validWindow ? window.innerHeight : undefined,\r\n    };\r\n\r\n    return size;\r\n  }, [validWindow]);\r\n\r\n  const [size, setSize] = useState(getSize());\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setSize(getSize());\r\n    }\r\n\r\n    if (validWindow) {\r\n      window.addEventListener('resize', handleResize);\r\n\r\n      return () => {\r\n        window.removeEventListener('resize', handleResize);\r\n      };\r\n    }\r\n  }, [getSize, validWindow]);\r\n\r\n  return size;\r\n}\r\n\r\nexport default useWindowSize;\r\n","import { useRef, useEffect } from 'react';\r\nimport { Maybe } from './types';\r\n\r\nfunction useInterval(callback: VoidFunction, delay: number) {\r\n  const savedCallback = useRef<Maybe<VoidFunction>>(null);\r\n\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current?.();\r\n    }\r\n\r\n    if (delay) {\r\n      const id = setInterval(() => {\r\n        tick();\r\n      }, delay);\r\n      return () => {\r\n        clearInterval(id);\r\n      };\r\n    }\r\n  }, [delay]);\r\n}\r\n\r\nexport default useInterval;\r\n","import { NullOrUndefined } from './types';\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport function isNullOrUndefined(value: any): value is NullOrUndefined {\r\n  return [null, undefined].includes(value);\r\n}\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport useWindowSize from './useWindowSize';\r\nimport useInterval from './useInterval';\r\nimport { isNullOrUndefined } from './utils';\r\nexport type InfiniteScrollContainer = 'window' | 'parent';\r\nconst WINDOW: InfiniteScrollContainer = 'window';\r\nconst PARENT: InfiniteScrollContainer = 'parent';\r\n\r\ntype InfiniteContainer = HTMLElement | (Node & ParentNode);\r\n\r\nfunction getElementSizes(element: InfiniteContainer) {\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  const parentRect = (element as any).getBoundingClientRect();\r\n  const { top, bottom, left, right } = parentRect;\r\n  return { top, bottom, left, right };\r\n}\r\n\r\nfunction isElementInView(\r\n  element: InfiniteContainer,\r\n  windowHeight: number,\r\n  windowWidth: number,\r\n) {\r\n  if (element) {\r\n    const { left, right, top, bottom } = getElementSizes(element);\r\n    if (left > windowWidth) {\r\n      return false;\r\n    } else if (right < 0) {\r\n      return false;\r\n    } else if (top > windowHeight) {\r\n      return false;\r\n    } else if (bottom < 0) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport interface UseInfiniteScrollArgs {\r\n  // Some sort of \"fetching\" info of the request.\r\n  loading: boolean;\r\n  // If the list has more items to load.\r\n  hasNextPage: boolean;\r\n  // The callback function to execute when the threshold is exceeded.\r\n  onLoadMore: Function;\r\n  // Maximum distance to bottom of the window/parent to trigger the callback. Default is 150.\r\n  threshold?: number;\r\n  // Frequency to check the dom. Default is 200.\r\n  checkInterval?: number;\r\n  // May be `\"window\"` or `\"parent\"`. Default is `\"window\"`. If you want to use a scrollable parent for the infinite list, use `\"parent\"`.\r\n  scrollContainer?: InfiniteScrollContainer;\r\n}\r\n\r\nfunction useInfiniteScroll<T extends HTMLElement>({\r\n  loading,\r\n  hasNextPage,\r\n  onLoadMore,\r\n  threshold = 150,\r\n  checkInterval = 200,\r\n  scrollContainer = WINDOW,\r\n}: UseInfiniteScrollArgs) {\r\n  const ref = useRef<T>(null);\r\n  const { height: windowHeight, width: windowWidth } = useWindowSize();\r\n  // Normally we could use the \"loading\" prop, but when you set \"checkInterval\" to a very small\r\n  // number (like 10 etc.), some request components can't set its loading state\r\n  // immediately (I had this problem with react-apollo's Query component. In some cases, it runs\r\n  // \"updateQuery\" twice). Thus we set our own \"listen\" state which immeadiately turns to \"false\" on\r\n  // calling \"onLoadMore\".\r\n  const [listen, setListen] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      setListen(true);\r\n    }\r\n  }, [loading]);\r\n\r\n  function getBottomOffset() {\r\n    const element = ref.current;\r\n\r\n    if (!element || isNullOrUndefined(windowHeight)) {\r\n      return null;\r\n    }\r\n\r\n    const rect = element.getBoundingClientRect();\r\n\r\n    const bottom = rect.bottom;\r\n    let bottomOffset = bottom - windowHeight;\r\n\r\n    if (scrollContainer === PARENT) {\r\n      const parent = element.parentNode;\r\n      if (!parent) {\r\n        return null;\r\n      }\r\n      const { bottom: parentBottom } = getElementSizes(parent);\r\n      // Distance between bottom of list and its parent\r\n      bottomOffset = bottom - parentBottom;\r\n    }\r\n\r\n    return bottomOffset;\r\n  }\r\n\r\n  function isParentInView() {\r\n    const parent = ref.current?.parentNode;\r\n    if (\r\n      !parent ||\r\n      isNullOrUndefined(windowHeight) ||\r\n      isNullOrUndefined(windowWidth)\r\n    ) {\r\n      return false;\r\n    }\r\n    return isElementInView(parent, windowHeight, windowWidth);\r\n  }\r\n\r\n  function isListInView() {\r\n    const element = ref.current;\r\n    if (\r\n      !element ||\r\n      isNullOrUndefined(windowHeight) ||\r\n      isNullOrUndefined(windowWidth)\r\n    ) {\r\n      return false;\r\n    }\r\n    return isElementInView(element, windowHeight, windowWidth);\r\n  }\r\n\r\n  function listenBottomOffset() {\r\n    if (listen && !loading && hasNextPage) {\r\n      if (ref.current) {\r\n        if (scrollContainer === PARENT) {\r\n          if (!isParentInView()) {\r\n            // Do nothing if the parent is out of screen\r\n            return;\r\n          }\r\n        } else if (!isListInView()) {\r\n          return;\r\n        }\r\n\r\n        // Check if the distance between bottom of the container and bottom of the window or parent\r\n        // is less than \"threshold\"\r\n        const bottomOffset = getBottomOffset();\r\n\r\n        if (isNullOrUndefined(bottomOffset)) {\r\n          return;\r\n        }\r\n\r\n        const validOffset = bottomOffset < threshold;\r\n\r\n        if (validOffset) {\r\n          setListen(false);\r\n          onLoadMore();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  useInterval(\r\n    () => {\r\n      listenBottomOffset();\r\n    },\r\n    // Stop interval when there is no next page.\r\n    hasNextPage ? checkInterval : 0,\r\n  );\r\n\r\n  return ref;\r\n}\r\n\r\nexport default useInfiniteScroll;\r\n"],"names":["useWindowSize","validWindow","window","getSize","useCallback","size","width","innerWidth","undefined","height","innerHeight","useState","setSize","useEffect","handleResize","addEventListener","removeEventListener","useInterval","callback","delay","savedCallback","useRef","current","tick","id","setInterval","clearInterval","isNullOrUndefined","value","includes","WINDOW","PARENT","getElementSizes","element","parentRect","getBoundingClientRect","top","bottom","left","right","isElementInView","windowHeight","windowWidth","useInfiniteScroll","loading","hasNextPage","onLoadMore","threshold","checkInterval","scrollContainer","ref","listen","setListen","getBottomOffset","rect","bottomOffset","parent","parentNode","parentBottom","isParentInView","isListInView","listenBottomOffset","validOffset"],"mappings":"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"}